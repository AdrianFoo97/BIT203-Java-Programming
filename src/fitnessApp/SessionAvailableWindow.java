package fitnessApp;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * This class will display  a window with all the training session with
 * the status AVAILABLE to the member
 * @author Adrian Foo
 */
public class SessionAvailableWindow extends javax.swing.JFrame {
    private HELPFit HF;
    private Member theMember;
    private AvailableSessionModel asm;
    private DefaultListModel listModel;
    int xMouse;
    int yMouse;
    
    /**
     * This is a constructor to create the window to display all the 
     * available training session to the user
     * @param HF
     * @param theMember 
     */
    public SessionAvailableWindow(HELPFit HF, Member theMember) {
        initComponents();
        this.HF = HF;
        this.theMember = theMember;
        setupAvailableSessionModel();
        setupListModel();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    /**
     * This function is used to setup the table model for the table
     */
    public void setupAvailableSessionModel(){
        asm = new AvailableSessionModel(HF.getAvailableHfSession());
        availableSessionTable.setModel(asm);
    }
    /**
     * This function is used to setup the list model for the list
     */
    public void setupListModel(){
        listModel = new DefaultListModel();
        selectedSessionList.setModel(listModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableSessionTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        removeBtn = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedSessionList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        selectBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        frameDrag = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(36, 49, 67));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(36, 49, 67));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        availableSessionTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        availableSessionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        availableSessionTable.setGridColor(new java.awt.Color(255, 255, 255));
        availableSessionTable.setSelectionBackground(new java.awt.Color(36, 49, 67));
        availableSessionTable.getTableHeader().setResizingAllowed(false);
        availableSessionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(availableSessionTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 856, 270));

        jPanel2.setBackground(new java.awt.Color(36, 49, 67));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        removeBtn.setBackground(new java.awt.Color(83, 197, 185));
        removeBtn.setText("Remove");
        removeBtn.setBorder(null);
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });
        jPanel2.add(removeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, 120, 40));

        registerBtn.setBackground(new java.awt.Color(83, 197, 185));
        registerBtn.setText("Register");
        registerBtn.setBorder(null);
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });
        jPanel2.add(registerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 130, 40));

        selectedSessionList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(selectedSessionList);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 40, 850, 161));

        jLabel2.setFont(new java.awt.Font("Ubuntu Mono", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Selected Session: ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 340, -1, 280));

        selectBtn.setBackground(new java.awt.Color(83, 197, 185));
        selectBtn.setText("Select");
        selectBtn.setBorder(null);
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });
        jPanel1.add(selectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 130, 40));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ubuntu Mono", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Training Session List");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fitnessApp/img/Minus_24px.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fitnessApp/img/Delete_24px.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 10, -1, -1));

        frameDrag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                frameDragMouseDragged(evt);
            }
        });
        frameDrag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameDragMousePressed(evt);
            }
        });
        jPanel3.add(frameDrag, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 40));

        jLabel3.setFont(new java.awt.Font("Ubuntu Mono", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Session Available: ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
        int row = availableSessionTable.getSelectedRow();
        TrainingSession theSession = null;
        String[] options = {"OK"};
        
        if (row < 0){
            JOptionPane.showOptionDialog(this, "Please select a training "
                    + "session!",
                "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0] );
        }
        else{
            theSession = asm.getTrainingSessionAt(row);
            if(listModel.contains(theSession)){
                JOptionPane.showOptionDialog(this, "This training session  "
                    + "has been selected!",
                "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0] );
            }
            else if(theMember.getTrainingSessions().contains(theSession)){
                JOptionPane.showOptionDialog(this, "You have already "
                    + "registered for this session!",
                "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0] );
            }
            else{
                listModel.addElement(theSession);
            }
        }
    }//GEN-LAST:event_selectBtnActionPerformed
    /**
     * This function will remove the element that has been selected
     * by the user in the list when the user clicked on the button
     * 'remove'
     * @param evt 
     */
    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        listModel.removeElement(selectedSessionList.getSelectedValue());
    }//GEN-LAST:event_removeBtnActionPerformed
    /**
     * This function will register all the training session that has been 
     * selected by the member when the register button is clicked
     * @param evt 
     */
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        String[] options = {"OK"};
        String[] options2 = {"Cancel", "OK"};
        int option = -1;
        ArrayList<TrainingSession> selectedSession = new ArrayList<>();
        if(listModel.getSize() <= 0){
            JOptionPane.showOptionDialog(this, "No training session  "
                    + "has been selected!",
                "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0] );
        }
        else{
            for(int i = 0; i< listModel.getSize();i++){
            TrainingSession ts = (TrainingSession)listModel.getElementAt(i);
            selectedSession.add(ts);
            }
            
            option = 
            JOptionPane.showOptionDialog(this, "Are you sure you want to "
                        + "register for these sessions?",
                    "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                    null, options2, options[0] );
        }
        
        if(option == 1){
            boolean status = false;
            boolean status2 = false;
            for(TrainingSession ts: selectedSession){
                status = theMember.addTrainingSession(ts);
                status2 = ts.register(theMember);
                if(!status && !status2){
                    JOptionPane.showOptionDialog(this, "Session can't be "
                        + "registered! Please try again!",
                    "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                    null, options, options[0] );
                    break;
                }
            }
            JOptionPane.showOptionDialog(this, "Sessions have been  "
                        + "registered successfully!",
                    "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                    null, options, options[0] );
            this.dispose();
        }
    }//GEN-LAST:event_registerBtnActionPerformed
    /**
     * This function will minimize the window when the minimize label
     * is clicked
     * @param evt 
     */
    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel15MouseClicked
    /**
     * This function will close the window when the close label 
     * is clicked
     * @param evt 
     */
    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel16MouseClicked
    /**
     * This function will allow the user to drag the dragFrame when the user
     * dragging the frame
     * @param evt 
     */
    private void frameDragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDragMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_frameDragMouseDragged
    /**
     * This function will get the location of the mouse when the user 
     * click on the dragFrame
     * @param evt 
     */
    private void frameDragMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDragMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_frameDragMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableSessionTable;
    private javax.swing.JLabel frameDrag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton selectBtn;
    private javax.swing.JList selectedSessionList;
    // End of variables declaration//GEN-END:variables

}
