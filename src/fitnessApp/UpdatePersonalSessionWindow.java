package fitnessApp;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * This clss will create a JFrame that allow the trainer to update
 * the personal training session
 * @author foo
 */
public class UpdatePersonalSessionWindow extends javax.swing.JFrame {
    private PersonalTraining theSession;
    private Frame parent;
    int xMouse;
    int yMouse;
    /**
     * This is the constructor that will create a window to display all 
     * the original details of the personal training session and allow
     * the trainer to modify it and update it.
     */
    public UpdatePersonalSessionWindow(Frame parent, PersonalTraining theSession) {
        initComponents();
        this.theSession = theSession;
        this.parent = parent;
        sessionIDLabel.setText(theSession.getSessionID());
        titleLabel.setText(theSession.getTitle());
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        dateTF.setText(theSession.getDate().format(dateFormatter));
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("h:m a");
        timeTF.setText(theSession.time.format(timeFormatter));
        feeTF.setText(String.valueOf(theSession.getFee()));
        statusCombo.setSelectedItem(theSession.getStatus());
        notesTA.setText(theSession.getNotes());
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        dateTF = new javax.swing.JTextField();
        timeTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        feeTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesTA = new javax.swing.JTextArea();
        statusCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        sessionIDLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        frameDrag1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(36, 49, 67));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Status: ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        dateTF.setBackground(new java.awt.Color(36, 49, 67));
        dateTF.setForeground(new java.awt.Color(255, 255, 255));
        dateTF.setBorder(null);
        dateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTFActionPerformed(evt);
            }
        });
        jPanel1.add(dateTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 350, 30));

        timeTF.setBackground(new java.awt.Color(36, 49, 67));
        timeTF.setForeground(new java.awt.Color(255, 255, 255));
        timeTF.setBorder(null);
        jPanel1.add(timeTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 350, 30));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Notes: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        feeTF.setBackground(new java.awt.Color(36, 49, 67));
        feeTF.setForeground(new java.awt.Color(255, 255, 255));
        feeTF.setBorder(null);
        jPanel1.add(feeTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 350, 30));

        notesTA.setColumns(20);
        notesTA.setRows(5);
        jScrollPane1.setViewportView(notesTA);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 350, -1));

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AVAILABLE", "FULL", "COMPLETED", "CANCELLED" }));
        jPanel1.add(statusCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 350, 40));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date: ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Fee: ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Time: ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        updateBtn.setBackground(new java.awt.Color(83, 197, 185));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 510, 89, 42));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 350, 20));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 350, 10));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 350, 10));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 216, 430, 570));

        jPanel2.setBackground(new java.awt.Color(83, 197, 185));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("Personal Training");
        jPanel2.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        sessionIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        sessionIDLabel.setText("100");
        jPanel2.add(sessionIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fitnessApp/img/User_96px.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Ubuntu Mono", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Personal Training ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fitnessApp/img/Minus_24px.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fitnessApp/img/Delete_24px.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        frameDrag1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                frameDrag1MouseDragged(evt);
            }
        });
        frameDrag1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameDrag1MousePressed(evt);
            }
        });
        jPanel2.add(frameDrag1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 220));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This function will update the personal training sesion if all 
     * the details entered is valid when the update button is clicked
     * @param evt 
     */
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        DateTimeFormatter timeFormat = DateTimeFormatter.ofPattern("h:m a");
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("d/M/y");
        
        LocalDate sessionDate = null;
        LocalTime sessionTime = null;
        String[] options = {"OK"};
        boolean validDate = false;
        boolean validTime = false;
        boolean validFee = false;
        double fee;
        

        
        if(dateTF.getText().equals("") || timeTF.getText().equals("") ||
            feeTF.getText().equals("")){
            JOptionPane.showOptionDialog(this, "Please fill the "
                + "information requried!",
                "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0] );
        }
        else{
            try {
                String date = dateTF.getText();
                sessionDate = LocalDate.parse(date, dateFormat);
                if (sessionDate.isBefore(LocalDate.now())) {
                    JOptionPane.showMessageDialog(this, "Session date cannot "
                            + "be before today!");
                }
                else {
                    validDate = true;
                }

            } catch (DateTimeParseException dtpe) {
                JOptionPane.showMessageDialog(this, "Invalid date entered, "
                        + "please re-enter date as dd/mm/yyy");
            }
            
            try {
                String time = timeTF.getText().toUpperCase();
                sessionTime = LocalTime.parse(time, timeFormat);
                validTime = true;
            } catch (DateTimeParseException dtpe) {
                JOptionPane.showMessageDialog(this, "Invalid time entered, "
                        + "please re-enter time as HH:MM AM/PM");
            }
            
            try {
                fee = Double.parseDouble(feeTF.getText());
                if (fee > 0) {
                    validFee = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Please enter a valid "
                            + "number for the fee!");
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Please enter a valid "
                        + "number, for the fee!");
            }
            
            if (validDate && validTime && validFee) {
                LocalDate date = LocalDate.parse(dateTF.getText(), dateFormat);
                LocalTime time = LocalTime.parse(timeTF.getText(), timeFormat);
                fee = Double.parseDouble(feeTF.getText());
                String notes = notesTA.getText();
                SessionStatus status = SessionStatus.valueOf(
                    (String)statusCombo.getSelectedItem());

                theSession.setDate(date);
                theSession.setStatus(status);
                theSession.setFee(fee);
                theSession.setTime(time);
                theSession.setNotes(notes);

                JOptionPane.showOptionDialog(this, "Session updated successfully! ",
                    "", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE,
                    null, options, options[0] );

                this.dispose();
                parent.setVisible(true);
            }
        }

    }//GEN-LAST:event_updateBtnActionPerformed
    /**
     * This function will minimize the window when the minimize label
     * is clicked
     * @param evt 
     */
    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel15MouseClicked
    /**
     * This function will close the window when the close label 
     * is clicked
     * @param evt 
     */
    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        this.dispose();
        parent.setVisible(true);
    }//GEN-LAST:event_jLabel16MouseClicked
    /**
     * This function will minimize the window when the minimize label
     * is clicked
     * @param evt 
     */
    private void frameDrag1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDrag1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_frameDrag1MouseDragged
    /**
     * This function will allow the user to drag the dragFrame when the user
     * dragging the frame
     * @param evt 
     */
    private void frameDrag1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDrag1MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_frameDrag1MousePressed

    private void dateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dateTF;
    private javax.swing.JTextField feeTF;
    private javax.swing.JLabel frameDrag1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea notesTA;
    private javax.swing.JLabel sessionIDLabel;
    private javax.swing.JComboBox<String> statusCombo;
    private javax.swing.JTextField timeTF;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
